#include <ESP8266WiFi.h>
#include <ESP8266WebServer.h>
#include <Wire.h>
#include <Adafruit_GFX.h>
#include <Adafruit_SSD1306.h>
#include <ESP8266WebServer.h>

#define SCREEN_WIDTH 128
#define SCREEN_HEIGHT 64
#define OLED_RESET -1
#define SCREEN_ADDRESS 0x3C

// Network credentials
const char* ssid = "rc-lap-timer";
const char* password = "rclaptimer";

// Pin definitions for both LEDs
// LED 1
const int RED_PIN_1 = 16;    // D0
const int GREEN_PIN_1 = 5;   // D1
const int BLUE_PIN_1 = 4;    // D2

// LED 2
const int RED_PIN_2 = 0;     // D3
const int GREEN_PIN_2 = 2;   // D4
const int BLUE_PIN_2 = 15;   // D8

Adafruit_SSD1306 display(SCREEN_WIDTH, SCREEN_HEIGHT, &Wire, OLED_RESET);
ESP8266WebServer server(80);

// Current LED states
int currentRed = 0;
int currentGreen = 0;
int currentBlue = 0;

void setup() {
  Serial.begin(115200);
  delay(1000);
  
  Serial.println("\n\nStarting setup...");
  
  server.enableCORS(true);

  // Initialize I2C with correct pins
  Wire.begin(12, 14);  // SDA = D6 (GPIO12), SCL = D5 (GPIO14)
  
  // Initialize OLED
  if(!display.begin(SSD1306_SWITCHCAPVCC, SCREEN_ADDRESS)) {
    Serial.println("SSD1306 allocation failed!");
    while(1) {
      delay(1000);
      Serial.println("OLED failed to start!");
    }
  }

  // Initialize LED pins
  pinMode(RED_PIN_1, OUTPUT);
  pinMode(GREEN_PIN_1, OUTPUT);
  pinMode(BLUE_PIN_1, OUTPUT);
  pinMode(RED_PIN_2, OUTPUT);
  pinMode(GREEN_PIN_2, OUTPUT);
  pinMode(BLUE_PIN_2, OUTPUT);
  
  // Test both LEDs
  setLEDColors(50, 50, 50);
  
  // Initialize WiFi connection with retry
  setupWiFi();
  
  server.on("/", handleRoot);
  server.on("/rgb", handleRGBGet);
  server.on("/pattern", handlePatternGet);
  server.on("/text", handleTextGet);
  
  server.begin();
}

void loop() {
  server.handleClient();

  // Check WiFi connection and try to reconnect if lost
  if (WiFi.status() != WL_CONNECTED) {
    Serial.println("WiFi connection lost!");
    setupWiFi();  // Try to reconnect
  }
}

void setLEDColors(int red, int green, int blue) {
  // Set colors for LED 1
  analogWrite(RED_PIN_1, red);
  analogWrite(GREEN_PIN_1, green);
  analogWrite(BLUE_PIN_1, blue);
  
  // Set same colors for LED 2
  analogWrite(RED_PIN_2, red);
  analogWrite(GREEN_PIN_2, green);
  analogWrite(BLUE_PIN_2, blue);
}

void handleRoot() {
  String html = "<html><body>";
  html += "<h1>RGB LED Control</h1>";
  html += "<p>Current RGB: " + String(currentRed) + ", " + String(currentGreen) + ", " + String(currentBlue) + "</p>";
  html += "<h2>Examples:</h2>";
  html += "<ul>";
  html += "<li><a href='/rgb?r=255&g=0&b=0'>Red</a></li>";
  html += "<li><a href='/rgb?r=0&g=255&b=0'>Green</a></li>";
  html += "<li><a href='/rgb?r=0&g=0&b=255'>Blue</a></li>";
  html += "<li><a href='/rgb?r=255&g=255&b=0'>Yellow</a></li>";
  html += "<li><a href='/text?title=Alert&message=System Status OK'>Display Text</a></li>";
  html += "</ul>";
  html += "</body></html>";
  
  server.send(200, "text/html", html);
}

void handleRGBGet() {
  if (server.hasArg("r") && server.hasArg("g") && server.hasArg("b")) {
    currentRed = server.arg("r").toInt();
    currentGreen = server.arg("g").toInt();
    currentBlue = server.arg("b").toInt();
    
    setLEDColors(currentRed, currentGreen, currentBlue);
    
    server.sendHeader("Location", "/");
    server.send(303);
  } else {
    server.send(400, "text/plain", "Missing RGB values");
  }
}

void handleTextGet() {
  String title = server.hasArg("title") ? server.arg("title") : "Message";
  String message = server.hasArg("message") ? server.arg("message") : "";
  
  // Update OLED
  display.clearDisplay();
  display.setCursor(0,0);
  
  // Display title in larger text
  display.setTextSize(2);
  display.println(title);
  
  // Line separator
  display.setTextSize(1);
  display.println("");
  
  // Word wrap for message
  int16_t x1, y1;
  uint16_t w, h;
  String currentLine = "";
  String words = message;
  
  while (words.length() > 0) {
    int spaceIndex = words.indexOf(' ');
    String word = (spaceIndex == -1) ? words : words.substring(0, spaceIndex);
    
    display.getTextBounds((currentLine + " " + word).c_str(), 0, 0, &x1, &y1, &w, &h);
    
    if (w > SCREEN_WIDTH) {
      display.println(currentLine);
      currentLine = word;
    } else {
      if (currentLine.length() > 0) {
        currentLine += " ";
      }
      currentLine += word;
    }
    
    if (spaceIndex == -1) {
      words = "";
    } else {
      words = words.substring(spaceIndex + 1);
    }
  }
  
  if (currentLine.length() > 0) {
    display.println(currentLine);
  }
  
  display.display();
  
  server.sendHeader("Location", "/");
  server.send(303);
}

void handlePatternGet() {
  if (server.hasArg("name")) {
    String pattern = server.arg("name");
    
    if (pattern == "rc10") {
      DrawRC10();
    } else if (pattern == "johnny5") {
      DrawJohnny5();
    } else if (pattern == "slash") {
      DrawSlash();
    } else if (pattern == "upgrayedd") {
      DrawUpgrayedd();
    } else if (pattern == "doneflag") {
      DrawDoneFlag();
    } else if (pattern == "racecar") {
      DrawRaceCar();
    } else if (pattern == "stopwatch") {
      DrawStopWatch();
    } else {
      server.send(400, "text/plain", "Unknown pattern");
      return;
    }    
    server.sendHeader("Location", "/");
    server.send(303);
  } else {
    server.send(400, "text/plain", "No pattern specified");
  }
}

// 'rc10', 128x64px
const unsigned char rc10 [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x1e, 0x1f, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x0c, 0x0f, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xc8, 0xcf, 0x8f, 0x86, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x08, 0xff, 0x8f, 0x02, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfb, 0xff, 0xff, 0xff, 0xf8, 0x18, 0xff, 0x8f, 0xc2, 0x67, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x88, 0xcf, 0x8f, 0x12, 0x67, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x8c, 0x0f, 0x81, 0x22, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0x07, 0xff, 0xff, 0xf8, 0xc6, 0x1f, 0x81, 0x12, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0x20, 0x43, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 0xf9, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfc, 0x00, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0xe0, 0x00, 0x1c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xc0, 0xb8, 0x00, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0x08, 0x3f, 0xf0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x01, 0x20, 0x3f, 0xfb, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x01, 0x00, 0x0f, 0xfb, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0x00, 0x01, 0x00, 0x01, 0xf9, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0x00, 0x01, 0x60, 0x00, 0xfd, 0x21, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x3d, 0x00, 0x01, 0x60, 0x00, 0xfd, 0x31, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfc, 0x00, 0x00, 0x00, 0x10, 0x00, 0x7c, 0x38, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf0, 0x00, 0x80, 0x00, 0x00, 0x00, 0x7e, 0x3c, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0xff, 0xff, 
	0xf0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x7e, 0x1e, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xf8, 0xff, 0xff, 
	0xe0, 0x00, 0x00, 0x00, 0x40, 0x00, 0x3e, 0x1f, 0x0f, 0xff, 0xff, 0xff, 0xfe, 0x91, 0x7f, 0xff, 
	0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0x1f, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0xd8, 0x3f, 0xff, 
	0xe0, 0x00, 0x00, 0x00, 0x4f, 0xff, 0xff, 0xdf, 0x03, 0xff, 0xff, 0xff, 0xff, 0xc8, 0x3f, 0xff, 
	0xe0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x1f, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xc8, 0x03, 0xff, 
	0xe0, 0x00, 0x00, 0x10, 0x0f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xc0, 0x00, 0x7f, 
	0xf0, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xe7, 0xff, 0xff, 0x80, 0x07, 0xc0, 0x00, 0x3f, 
	0xfc, 0x00, 0x00, 0x00, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x1f, 
	0xe8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x04, 0x00, 0x07, 0xf0, 0x00, 0x7e, 0x01, 0xfc, 0x07, 
	0xc0, 0x00, 0x0f, 0xe0, 0x00, 0x03, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x3c, 0x07, 0xff, 0x03, 
	0xe0, 0x00, 0x3f, 0xf0, 0x00, 0x03, 0x7f, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x7c, 0x0f, 0x9f, 0x83, 
	0xe0, 0x00, 0x7e, 0xf8, 0x00, 0x03, 0x53, 0xff, 0xff, 0xff, 0x00, 0x00, 0x58, 0x1f, 0xff, 0xc3, 
	0xe0, 0x00, 0x7c, 0x7c, 0x00, 0x03, 0x52, 0x12, 0x80, 0x01, 0x00, 0x00, 0x48, 0x1e, 0x6f, 0xc3, 
	0xf0, 0x00, 0xff, 0xfe, 0x00, 0x03, 0x52, 0x02, 0x00, 0x01, 0x00, 0x00, 0x40, 0x3d, 0xf7, 0xe1, 
	0xf8, 0x00, 0xff, 0xfe, 0x00, 0x03, 0x46, 0x82, 0x00, 0x01, 0x00, 0x00, 0x20, 0x3d, 0xfb, 0xe1, 
	0xfc, 0x00, 0xcf, 0xfe, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x18, 0x39, 0xff, 0xe1, 
	0xff, 0xc1, 0xcf, 0xe6, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x39, 0xff, 0xe1, 
	0xff, 0xc0, 0xef, 0xe6, 0x00, 0x00, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xe1, 
	0xff, 0xc0, 0xe7, 0xce, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x30, 0x3f, 0xff, 0xe1, 
	0xff, 0x80, 0xff, 0xce, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x38, 0x33, 0xfe, 0x61, 
	0xff, 0xe0, 0x7b, 0x3c, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x18, 0x1a, 0x7f, 0xc3, 
	0xff, 0xe0, 0x7c, 0x78, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x1c, 0x1e, 0x9f, 0xc3, 
	0xff, 0xe0, 0x3f, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x04, 0x0f, 0xff, 0x83, 
	0xff, 0xe0, 0x0f, 0xe0, 0x1f, 0xff, 0x00, 0x9f, 0xff, 0xff, 0xff, 0xff, 0x00, 0x07, 0xff, 0x07, 
	0xff, 0xf8, 0x00, 0x00, 0x3f, 0xff, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x01, 0xfc, 0x0f, 
	0xff, 0xfc, 0x00, 0x00, 0x3f, 0xff, 0xe7, 0x90, 0x06, 0x0c, 0x3f, 0xff, 0xc0, 0x00, 0x00, 0x1f, 
	0xff, 0xfc, 0x00, 0x00, 0xff, 0xff, 0xe7, 0x90, 0x04, 0x4c, 0x7f, 0xff, 0xf0, 0x00, 0x00, 0x3f, 
	0xff, 0xff, 0x00, 0x01, 0xff, 0xff, 0xe7, 0x12, 0x24, 0x04, 0xff, 0xff, 0xfe, 0x20, 0x00, 0x7f, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x92, 0x24, 0x7c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe7, 0x92, 0x26, 0x0c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
void DrawRC10() {
  display.clearDisplay();    
  display.drawBitmap(0, 0, rc10, 128, 64, WHITE);
  display.display();    
}

// 'johnny5', 128x64px
const unsigned char johnny5 [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf0, 0x00, 0x00, 0x00, 0x5f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x80, 0x00, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf8, 0x00, 0x00, 0x00, 0xf0, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf8, 0x80, 0x00, 0x1e, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc0, 0x00, 0x7f, 0x00, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf0, 0x0e, 0x00, 0x00, 0x10, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x83, 0x00, 0x3f, 0xfe, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf3, 0xfe, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x1d, 0xff, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf7, 0xfe, 0x73, 0x1e, 0x11, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xaf, 0x7d, 0x7e, 0x00, 0x00, 0x38, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xd8, 0x0e, 0xbe, 0x00, 0x60, 0x0c, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x30, 0x07, 0x5e, 0x00, 0x40, 0x70, 0x06, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0x02, 0x4c, 0x00, 0x41, 0xbf, 0x83, 0x7e, 0x0f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0xe0, 0x03, 0x8c, 0x00, 0x41, 0x7f, 0xc3, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0x01, 0xa4, 0x00, 0x02, 0xe0, 0xf1, 0x80, 0x0b, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0x03, 0x84, 0x00, 0x05, 0x80, 0x30, 0xd8, 0x00, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xe0, 0x1b, 0x80, 0x00, 0x05, 0x83, 0x1a, 0xdf, 0xe0, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0xe0, 0x3b, 0x40, 0x00, 0x0f, 0x0f, 0x1a, 0xc3, 0xfc, 0x1f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xb0, 0xf7, 0x40, 0x00, 0x0b, 0x1f, 0x0f, 0xc0, 0x00, 0x1f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x59, 0xfe, 0x80, 0x00, 0x0b, 0x3e, 0x0f, 0xc0, 0x01, 0x1f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xbf, 0xfd, 0x80, 0x00, 0x0f, 0x38, 0x1b, 0xcf, 0x01, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xd7, 0xfb, 0x00, 0x00, 0x07, 0x20, 0x1a, 0xcf, 0xfc, 0x3f, 0x3f, 0xff, 0xff, 
	0xff, 0xfe, 0x00, 0x00, 0x04, 0x00, 0x00, 0x05, 0x80, 0x1e, 0xc3, 0xfc, 0x1f, 0xbf, 0xff, 0xff, 
	0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0xc3, 0xc0, 0x37, 0x80, 0x0c, 0x1f, 0xbf, 0xff, 0xff, 
	0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x00, 0x03, 0x70, 0xef, 0x80, 0x00, 0x0f, 0xbf, 0xff, 0xff, 
	0xff, 0xff, 0xc0, 0x00, 0x00, 0x78, 0x00, 0x01, 0xff, 0xdf, 0x00, 0x01, 0xef, 0xbf, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x70, 0x00, 0x00, 0x1f, 0x3f, 0x00, 0x10, 0xe3, 0xbf, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x0f, 0x00, 0x01, 0xc0, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0xf8, 0x00, 0x00, 0x30, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xfc, 0x00, 0x00, 0x18, 0x00, 0x00, 0x00, 0x06, 0x00, 0x20, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x00, 0x00, 0x18, 0x00, 0x40, 0x00, 0x06, 0x00, 0x20, 0x00, 0x0f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0x00, 0x0c, 0x00, 0x00, 0x00, 0x06, 0x00, 0x00, 0x00, 0x1f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x80, 0x01, 0xce, 0x00, 0x20, 0x00, 0x06, 0x00, 0x43, 0xc0, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0x01, 0xcc, 0x7f, 0x90, 0x00, 0x0e, 0x00, 0x42, 0x71, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfd, 0xc8, 0x00, 0x00, 0xc0, 0x30, 0x00, 0x00, 0x0b, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x08, 0x00, 0x00, 0x70, 0x80, 0x00, 0x04, 0x0f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x08, 0x00, 0x00, 0x71, 0xf0, 0x00, 0xfc, 0x07, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0xf7, 0xff, 0xf0, 0x63, 0xf0, 0x00, 0x80, 0x17, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xff, 0xe3, 0xf0, 0x01, 0x00, 0x0f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x73, 0xe0, 0x01, 0x00, 0x2f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x02, 0xc0, 0x00, 0x60, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xbe, 0x00, 0x00, 0x01, 0x80, 0x00, 0x00, 0x1f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x00, 0x02, 0x01, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x02, 0x80, 0xc7, 0x1f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x05, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0x00, 0x04, 0x1c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x09, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xfc, 0x18, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0x3c, 0x12, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x07, 0x8c, 0x16, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xdf, 0xbf, 0xe0, 0xc5, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xaf, 0xbf, 0xf8, 0xf7, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xf9, 0xf7, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf7, 0xdf, 0xf1, 0xeb, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xff, 0xc3, 0xfb, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xeb, 0xef, 0xc3, 0xd5, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xc7, 0xf8, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfd, 0xf7, 0x0f, 0xa8, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
void DrawJohnny5() {
  display.clearDisplay();    
  display.drawBitmap(0, 0, johnny5, 128, 64, WHITE);
  display.display();      
}

// 'slash', 128x64px
const unsigned char slash [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf0, 0x10, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x1c, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xc0, 0x03, 0x80, 0x00, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x20, 0xa0, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x9f, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x08, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x00, 0x20, 0x00, 0x00, 0x00, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0x00, 0x00, 0x00, 0x40, 0x00, 0x00, 0x06, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xd8, 0x00, 0x00, 0x00, 0x0e, 0x00, 0x40, 0x06, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x80, 0x00, 0x0f, 0xf0, 0x0f, 0x90, 0x80, 0x06, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x81, 0x80, 0x7f, 0xc0, 0x7f, 0x0c, 0x20, 0x02, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x01, 0xa0, 0x1c, 0x00, 0x00, 0x0c, 0x60, 0x03, 0xc0, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x00, 0x0f, 0xf0, 0x00, 0x03, 0x0c, 0xc0, 0x00, 0x41, 0xc1, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfc, 0x00, 0x03, 0x88, 0x00, 0x00, 0x01, 0xa0, 0xc1, 0x80, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfc, 0x01, 0x00, 0x77, 0x80, 0x00, 0x1c, 0x30, 0x80, 0x00, 0x0d, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfc, 0x00, 0x00, 0x1e, 0x00, 0x00, 0xf0, 0x01, 0x00, 0x00, 0x71, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf8, 0x00, 0x1c, 0x08, 0x00, 0x0f, 0xf0, 0x02, 0x00, 0x80, 0x39, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0xff, 0xe0, 0x00, 0x01, 0x01, 0x83, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf8, 0x20, 0x00, 0x00, 0x00, 0x3c, 0x00, 0x1c, 0x03, 0x80, 0x13, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf0, 0x30, 0x00, 0x01, 0x00, 0xdd, 0x00, 0x08, 0x1f, 0x80, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf0, 0x00, 0x00, 0x20, 0x03, 0xdc, 0x00, 0x10, 0x3e, 0x00, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf0, 0x00, 0x00, 0x0c, 0x1c, 0x3c, 0x00, 0x00, 0x38, 0x00, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf8, 0x18, 0x00, 0x00, 0x00, 0x78, 0x00, 0x02, 0xe0, 0x00, 0x8f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf8, 0x00, 0x00, 0x00, 0x2e, 0xf0, 0x01, 0xcf, 0xc0, 0x01, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf8, 0x00, 0x00, 0x00, 0x00, 0x60, 0x00, 0xff, 0x80, 0x02, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfc, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x7e, 0x00, 0x03, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0x00, 0x00, 0x00, 0x38, 0x00, 0x00, 0x18, 0x00, 0x02, 0xdf, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x00, 0x08, 0x00, 0x00, 0x04, 0x30, 0x10, 0x0e, 0x02, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x80, 0x3e, 0x00, 0x00, 0x00, 0xc8, 0x00, 0x7e, 0x03, 0x9f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xc0, 0x3f, 0x80, 0x00, 0x00, 0x00, 0x03, 0xfe, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 0x9c, 0x3f, 0xfe, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x00, 0x31, 0x7c, 0x3f, 0xff, 0x00, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe0, 0x03, 0x64, 0x3f, 0xff, 0x80, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf0, 0x01, 0x6c, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0x01, 0xee, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0x01, 0x3a, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xf8, 0x02, 0x38, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x03, 0x30, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfc, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x00, 0x03, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x07, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xc0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xf0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
void DrawSlash() {
  display.clearDisplay();    
  display.drawBitmap(0, 0, slash, 128, 64, WHITE);
  display.display();      
}

// 'upgrayedd', 128x64px
const unsigned char upgrayedd [] PROGMEM = {
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x01, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0xff, 0x9f, 0xf3, 0xff, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x0f, 0xf8, 0xff, 0xbf, 0xf7, 0xff, 0xff, 0xfe, 0x40, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x07, 0xf8, 0xff, 0xbf, 0xf7, 0xff, 0xff, 0xfe, 0x40, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x06, 0xf8, 0xff, 0xbf, 0xff, 0xfc, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xb9, 0xfe, 0xfe, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x03, 0xfc, 0xfc, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x80, 0x1c, 0xf8, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0xc0, 0x0c, 0xf8, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf3, 0x88, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x0f, 0xff, 0xfb, 0xb0, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x3f, 0xff, 0xf3, 0xf8, 0x7f, 0xff, 0xf8, 0x30, 0x04, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x7f, 0xff, 0xc0, 0x31, 0xff, 0xff, 0xfc, 0x70, 0x08, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x7f, 0xff, 0x00, 0x37, 0xff, 0xff, 0xfe, 0x70, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x02, 0x7f, 0xff, 0x00, 0x2f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x02, 0x7f, 0xff, 0x80, 0x3f, 0xff, 0xff, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x04, 0x7f, 0xff, 0x80, 0x7f, 0xff, 0xff, 0xcf, 0x00, 0x40, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x05, 0xff, 0xff, 0xc0, 0x3f, 0xff, 0xfe, 0xff, 0x00, 0x60, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xff, 0xff, 0xc0, 0x7f, 0xff, 0xff, 0xff, 0x00, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xff, 0xff, 0xe1, 0x7f, 0xff, 0xff, 0xff, 0x91, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xff, 0xff, 0xe3, 0xfe, 0x7f, 0xff, 0xff, 0xf1, 0xff, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xcb, 0xff, 0xe0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xfd, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xb8, 0xff, 0xff, 0xfe, 0x00, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xe0, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x1f, 0xf7, 0xff, 0xe1, 0xef, 0x00, 0x1f, 0xf8, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xff, 0xff, 0x83, 0xdc, 0x0f, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xfe, 0x07, 0xff, 0xff, 0x81, 0xf7, 0xff, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xfc, 0x0d, 0xef, 0xff, 0x00, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x0b, 0xdf, 0xfd, 0x80, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x03, 0xdf, 0xfd, 0x18, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xe0, 0x03, 0xdf, 0xf9, 0x01, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0xc0, 0x07, 0xbf, 0xfb, 0x07, 0x7f, 0xfe, 0x0f, 0xf8, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0x80, 0x07, 0xbf, 0xfe, 0x3c, 0x77, 0xfc, 0x0f, 0xf8, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0x80, 0x07, 0x3f, 0xfe, 0x38, 0xc6, 0xfc, 0x8f, 0xf8, 0x00, 0x00, 
	0x00, 0x1f, 0xff, 0xff, 0xff, 0x80, 0x0f, 0x3f, 0xfa, 0x01, 0xc4, 0xfc, 0xef, 0xf8, 0x00, 0x00, 
	0x00, 0x11, 0xff, 0xff, 0xff, 0x80, 0x0f, 0x7f, 0xe2, 0x07, 0x01, 0xfc, 0xcf, 0xf8, 0x00, 0x00, 
	0x00, 0x00, 0xff, 0xff, 0xfe, 0x40, 0x0e, 0x7f, 0xe2, 0x0e, 0x03, 0xfe, 0x0f, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0xff, 0xff, 0xfe, 0x00, 0x0e, 0xff, 0xf2, 0x00, 0x07, 0xfe, 0x4f, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x7f, 0xff, 0xfb, 0x00, 0x1c, 0xff, 0xf2, 0x00, 0x07, 0xfe, 0xdf, 0xf0, 0x00, 0x00, 
	0x00, 0x00, 0x3f, 0xff, 0xfa, 0x00, 0x1c, 0xff, 0xf2, 0x00, 0x07, 0xfe, 0x1f, 0xf0, 0x00, 0x00, 
	0x00, 0x11, 0xdf, 0xff, 0xf8, 0x00, 0x18, 0xff, 0xe6, 0x00, 0x0f, 0xf0, 0x7f, 0xf8, 0x00, 0x00, 
	0x00, 0x11, 0xff, 0xff, 0xf8, 0x00, 0x39, 0xfb, 0x84, 0x10, 0x08, 0x0f, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x13, 0x3f, 0xff, 0xf8, 0x00, 0x21, 0xb7, 0x04, 0x18, 0x07, 0xff, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x13, 0x1f, 0xff, 0xf8, 0x00, 0x00, 0x86, 0x04, 0x01, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x1a, 0xf7, 0xff, 0xff, 0x80, 0x01, 0x86, 0x04, 0x1f, 0xff, 0xff, 0xff, 0xf8, 0x00, 0x00, 
	0x00, 0x0b, 0xf7, 0xff, 0xfc, 0x80, 0x00, 0x04, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 
	0x00, 0x03, 0x73, 0xff, 0xfc, 0x00, 0x00, 0x04, 0x08, 0x1f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 
	0x00, 0x02, 0x73, 0xff, 0xfc, 0x40, 0x00, 0x00, 0x08, 0x3f, 0xff, 0xff, 0xff, 0xf0, 0x00, 0x00, 
	0x00, 0x02, 0xb3, 0xff, 0xfe, 0x40, 0x00, 0x08, 0x08, 0x3f, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 
	0x00, 0x02, 0xe1, 0xff, 0xfc, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xfc, 0x00, 0x00, 0x00, 
	0x00, 0x03, 0x81, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xe0, 0x00, 0x00, 0x00, 
	0x00, 0x03, 0x48, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x10, 0x3f, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 
	0x00, 0x03, 0xe0, 0xff, 0xf8, 0x00, 0x00, 0x00, 0x10, 0x7f, 0xff, 0xfe, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x03, 0xc0, 0x7f, 0xf8, 0x00, 0x00, 0x20, 0x10, 0x7f, 0xff, 0xf0, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x01, 0xe0, 0x7f, 0xf8, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 
	0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00, 0x00
};
void DrawUpgrayedd() {
  display.clearDisplay();    
  display.drawBitmap(0, 0, upgrayedd, 128, 64, WHITE);
  display.display();      
}

// 'doneflag', 128x64px
const unsigned char doneflag [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xfc, 0xff, 0xff, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xe0, 0xff, 0xff, 0xff, 0x01, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xe7, 0xc0, 0x7f, 0xff, 0xfe, 0x01, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x87, 0xc0, 0x7f, 0xff, 0xfe, 0x03, 0xf0, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x07, 0xc0, 0x7f, 0xff, 0xfe, 0x03, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x07, 0xc1, 0x3f, 0xff, 0xfe, 0x03, 0xe0, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0x07, 0xcd, 0x3f, 0xff, 0xfc, 0xbc, 0x20, 0xfb, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x8f, 0x18, 0x1d, 0x3f, 0xff, 0xfc, 0xbc, 0x1e, 0xf8, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x0f, 0xf8, 0x1c, 0xbf, 0xff, 0xfd, 0xbc, 0x1f, 0x78, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x0e, 0xfc, 0x1e, 0x9f, 0xff, 0xfd, 0x78, 0x1f, 0x18, 0x7f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x00, 0xfc, 0x1e, 0x9f, 0xff, 0xf9, 0x38, 0x3f, 0x00, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x10, 0x7c, 0xe0, 0xdf, 0xff, 0xfb, 0x07, 0xff, 0x0c, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x90, 0x73, 0xe0, 0x5f, 0xff, 0xfb, 0x07, 0xc6, 0x0c, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x90, 0x43, 0xf0, 0x4f, 0xff, 0xf2, 0x0f, 0xc1, 0x8c, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x91, 0xc3, 0xf0, 0x4f, 0xff, 0xf2, 0x0f, 0xc1, 0xcc, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x97, 0xc1, 0xf0, 0x4f, 0xff, 0xf2, 0x0f, 0xc1, 0xf4, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0x87, 0xc1, 0x0f, 0x6f, 0xff, 0xf6, 0xf0, 0x43, 0xe0, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfd, 0x87, 0xce, 0x07, 0xe7, 0xff, 0xe6, 0xf0, 0x7b, 0xe0, 0x8f, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf1, 0x87, 0xff, 0x07, 0xa7, 0xff, 0xe5, 0xe0, 0x7d, 0xe1, 0x87, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x82, 0x3f, 0x07, 0xb7, 0xff, 0xe5, 0xe0, 0xfc, 0x21, 0x87, 0xff, 0xff, 0xff, 
	0xff, 0xe1, 0xe0, 0x00, 0x1f, 0x07, 0x33, 0xff, 0xcc, 0x20, 0xfc, 0x00, 0x07, 0xc1, 0xff, 0xff, 
	0xff, 0xc1, 0xf7, 0x04, 0x1f, 0xfc, 0x13, 0xff, 0xcc, 0x3f, 0x78, 0x10, 0x67, 0xc1, 0xff, 0xff, 
	0xff, 0xc1, 0xff, 0x04, 0x18, 0xfc, 0x1b, 0xff, 0xc8, 0x3f, 0x00, 0x30, 0x7f, 0xc1, 0xff, 0xff, 
	0xff, 0xc1, 0xff, 0x04, 0x30, 0x7c, 0x1b, 0xff, 0xd8, 0x3f, 0x06, 0x20, 0x79, 0xe3, 0xff, 0xff, 
	0xff, 0xc7, 0x0f, 0x02, 0xf0, 0x7c, 0x09, 0xff, 0x98, 0x3e, 0x07, 0x20, 0x70, 0x73, 0xff, 0xff, 
	0xfe, 0x1f, 0x0e, 0x40, 0xf0, 0x79, 0xe9, 0xff, 0x93, 0x8e, 0x0f, 0x83, 0x70, 0x7c, 0x3f, 0xff, 
	0xfe, 0x1f, 0x0c, 0x60, 0xf8, 0xc1, 0xe9, 0xff, 0x97, 0x81, 0x8f, 0x83, 0x10, 0x7c, 0x3f, 0xff, 
	0xfe, 0x1f, 0x00, 0x20, 0xff, 0xc1, 0xed, 0xff, 0x97, 0x83, 0xef, 0x02, 0x08, 0x7c, 0x3f, 0xff, 
	0xfe, 0x1e, 0xf8, 0x00, 0xc7, 0xc0, 0xf4, 0xff, 0x37, 0x83, 0xe3, 0x00, 0x0f, 0x38, 0x3f, 0xff, 
	0xff, 0x60, 0xf8, 0x00, 0x07, 0xe0, 0xe4, 0xff, 0x27, 0x03, 0xe0, 0x00, 0x0f, 0x07, 0xff, 0xff, 
	0xff, 0xf0, 0x78, 0x00, 0x03, 0xef, 0x86, 0xff, 0x20, 0xf7, 0xe0, 0x00, 0x0f, 0x07, 0xff, 0xff, 
	0xff, 0xf0, 0x73, 0x80, 0x03, 0x9f, 0x82, 0x7e, 0x41, 0xf8, 0xc0, 0x01, 0xef, 0x07, 0xff, 0xff, 
	0xff, 0xf0, 0x03, 0x80, 0x00, 0x0f, 0x82, 0x7e, 0x41, 0xf8, 0x00, 0x01, 0xe0, 0x07, 0xff, 0xff, 
	0xff, 0xe7, 0x83, 0x80, 0x8e, 0x0f, 0x81, 0xfe, 0xc1, 0xf0, 0x31, 0x81, 0xc1, 0xf3, 0xff, 0xff, 
	0xff, 0x07, 0xc1, 0x00, 0xbe, 0x0f, 0xdd, 0xbe, 0x9b, 0xf0, 0x7c, 0x80, 0xc1, 0xf0, 0xff, 0xff, 
	0xff, 0x87, 0xc0, 0x00, 0x1e, 0x08, 0x3c, 0xbe, 0xbc, 0x10, 0x7c, 0x00, 0x01, 0xf0, 0xff, 0xff, 
	0xff, 0x87, 0xde, 0x00, 0x1f, 0x78, 0x1c, 0x3c, 0xbc, 0x1e, 0x78, 0x00, 0x39, 0xf0, 0xff, 0xff, 
	0xff, 0x80, 0x1e, 0x00, 0x0c, 0xfc, 0x1e, 0x3c, 0x78, 0x1f, 0x38, 0x00, 0x3c, 0x00, 0xff, 0xff, 
	0xff, 0xfc, 0x1e, 0x00, 0x00, 0x7c, 0x1f, 0x18, 0x78, 0x3f, 0x00, 0x00, 0x3c, 0x1f, 0xff, 0xff, 
	0xff, 0xfc, 0x1e, 0x20, 0x00, 0x7e, 0xff, 0x99, 0xfe, 0x3e, 0x00, 0x02, 0x7c, 0x1f, 0xff, 0xff, 
	0xff, 0xfc, 0x18, 0xe0, 0x00, 0x7f, 0xff, 0x99, 0xff, 0xfe, 0x00, 0x03, 0x88, 0x1f, 0xff, 0xff, 
	0xff, 0xfc, 0x60, 0xe0, 0x00, 0x7f, 0xff, 0xd9, 0xff, 0xfe, 0x00, 0x07, 0x06, 0x3f, 0xff, 0xff, 
	0xff, 0xe1, 0xf0, 0x60, 0x01, 0xff, 0xff, 0xc3, 0xff, 0xff, 0x80, 0x07, 0x07, 0xc3, 0xff, 0xff, 
	0xff, 0xe1, 0xf0, 0x00, 0x07, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xe0, 0x01, 0x07, 0xc3, 0xff, 0xff, 
	0xff, 0xe1, 0xf1, 0x80, 0x0f, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xf8, 0x00, 0x8f, 0x83, 0xff, 0xff, 
	0xff, 0xf0, 0xc7, 0x80, 0x0f, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xf0, 0x01, 0xf3, 0x87, 0xff, 0xff, 
	0xff, 0xff, 0x07, 0xc0, 0x07, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xf0, 0x01, 0xf0, 0x67, 0xff, 0xff, 
	0xff, 0xff, 0x03, 0xc0, 0x07, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xf0, 0x01, 0xe0, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x83, 0x1c, 0x0f, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xf8, 0x1c, 0xe0, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x8c, 0x1c, 0x3f, 0xff, 0xff, 0xe7, 0xff, 0xff, 0xfc, 0x38, 0x20, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x3e, 0x0f, 0xff, 0xff, 0xff, 0xe3, 0xff, 0xff, 0xff, 0xf8, 0x3e, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0x3e, 0x0f, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xf0, 0x3e, 0x1f, 0xff, 0xff, 
	0xff, 0xfc, 0x3e, 0x3f, 0xff, 0xff, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xfc, 0x7e, 0x1f, 0xff, 0xff, 
	0xff, 0xfc, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xd9, 0xff, 0xff, 0xff, 0xff, 0xfc, 0x3f, 0xff, 0xff, 
	0xff, 0xfe, 0xff, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xff, 0xff, 0xff, 0xfe, 0x3f, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x99, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x9d, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x3c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
void DrawDoneFlag() {
  display.clearDisplay();    
  display.drawBitmap(0, 0, doneflag, 128, 64, WHITE);
  display.display();      
}

// 'racecar', 128x64px
const unsigned char racecar [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xcb, 0x5f, 0xd2, 0xff, 0xff, 0xff, 0xf4, 0x95, 0xff, 
	0xff, 0xff, 0xa4, 0xbd, 0xff, 0xfd, 0xe9, 0x48, 0x4e, 0x52, 0x5f, 0xfb, 0xb6, 0x94, 0x84, 0xff, 
	0xff, 0xff, 0x80, 0x95, 0xed, 0x21, 0x21, 0x01, 0x0a, 0x01, 0x7a, 0xc2, 0x80, 0x00, 0x00, 0xff, 
	0xff, 0xd0, 0x80, 0x10, 0x84, 0x20, 0x00, 0x01, 0x00, 0x01, 0x08, 0x40, 0x00, 0x02, 0x00, 0x7f, 
	0xff, 0x90, 0x80, 0x10, 0x84, 0x20, 0x04, 0x01, 0x08, 0x21, 0x08, 0x42, 0x08, 0x42, 0x10, 0xff, 
	0xff, 0xd0, 0x84, 0x10, 0x84, 0x20, 0x04, 0x21, 0x08, 0x21, 0x08, 0x43, 0x18, 0xc6, 0x37, 0xff, 
	0xff, 0x90, 0x84, 0x30, 0x84, 0x21, 0x00, 0x21, 0x08, 0x43, 0x18, 0xc7, 0xbe, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xdc, 0xc6, 0x30, 0x86, 0x7f, 
	0xff, 0xc4, 0x20, 0x84, 0x21, 0x08, 0x63, 0x08, 0x42, 0x18, 0xc6, 0x10, 0x86, 0x31, 0x84, 0xff, 
	0xff, 0x84, 0x21, 0x0c, 0x63, 0x08, 0x42, 0x10, 0xc2, 0x10, 0x84, 0x31, 0x8c, 0x21, 0x0c, 0xff, 
	0xff, 0x08, 0x43, 0x18, 0x42, 0x18, 0xc6, 0x30, 0x86, 0x31, 0x8c, 0x67, 0x8f, 0x73, 0x3f, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x80, 0x00, 0x00, 0x00, 0x01, 0xff, 
	0xff, 0xc0, 0x00, 0x00, 0x00, 0x00, 0x00, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0x41, 0x00, 0x00, 0x00, 0x00, 0x00, 0x03, 0xff, 
	0xff, 0xf0, 0x00, 0x00, 0x18, 0x01, 0xff, 0xff, 0xff, 0xe0, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xda, 0xff, 0xf8, 0xf6, 0x7f, 0xc6, 0x31, 0x84, 0x61, 0x8c, 0x63, 0xff, 0xff, 
	0xff, 0x8c, 0x63, 0x08, 0x63, 0x18, 0x42, 0x1e, 0xc2, 0x10, 0x86, 0x30, 0x86, 0x31, 0xbf, 0xff, 
	0xff, 0x84, 0x21, 0x8c, 0x21, 0x0c, 0x63, 0x1c, 0x42, 0x18, 0xc2, 0x10, 0xc6, 0x11, 0xff, 0xff, 
	0xff, 0xc6, 0x31, 0x86, 0x79, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf9, 0xbc, 0x6f, 0x8d, 0x7f, 0x08, 0x61, 0x08, 0x42, 0x38, 0xc7, 0xf4, 0xff, 
	0xff, 0xf0, 0xfe, 0x10, 0x9c, 0x27, 0x84, 0x3f, 0x49, 0xe1, 0x08, 0x42, 0x18, 0x53, 0xff, 0xff, 
	0xff, 0xf8, 0xb4, 0x50, 0xaf, 0x21, 0x8e, 0xff, 0xc8, 0x61, 0x08, 0x40, 0x00, 0x42, 0x7f, 0xff, 
	0xff, 0xf0, 0x94, 0x10, 0xa7, 0x21, 0x84, 0x27, 0xc8, 0x63, 0x08, 0x40, 0x38, 0x42, 0x7f, 0xff, 
	0xff, 0xfe, 0x9e, 0xd7, 0xff, 0x27, 0xe5, 0x2f, 0xf9, 0x6b, 0xdf, 0xfe, 0x7e, 0xf6, 0xff, 0xff, 
	0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xfb, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
void DrawRaceCar() {
  display.clearDisplay();    
  display.drawBitmap(0, 0, racecar, 128, 64, WHITE);
  display.display();      
}

// 'stopwatch', 128x64px
const unsigned char stopwatch [] PROGMEM = {
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xe0, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xcb, 0xe7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9f, 0xf3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x3f, 0xf9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x3f, 0xfc, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x7e, 0x1e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x7f, 0x9e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x7f, 0x0e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x7f, 0xce, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x7f, 0x4e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x7f, 0x0c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x3d, 0x0c, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xbf, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x9e, 0x81, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xc6, 0xd3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xe0, 0xc3, 0xc0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfa, 0x40, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xa1, 0xfd, 0xe3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x87, 0xdf, 0xb4, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x1d, 0xfe, 0xff, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0x73, 0xff, 0xff, 0x4f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0xcc, 0xfc, 0xff, 0xc7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x89, 0xf9, 0xb9, 0xfe, 0x7f, 0xa3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x06, 0xfa, 0x78, 0xfe, 0x7f, 0xf1, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0x80, 0x74, 0xf8, 0xff, 0xfe, 0x7e, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xe0, 0x01, 0xff, 0x7f, 0xfc, 0xfe, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xf8, 0x0b, 0xff, 0x77, 0xfc, 0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x03, 0xbe, 0x39, 0xff, 0x7f, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x0e, 0x9f, 0xb3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x8e, 0xbf, 0x9f, 0xff, 0xff, 0x5f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x8e, 0x78, 0x0f, 0xff, 0xfb, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x1f, 0xfe, 0x85, 0xff, 0xf3, 0xef, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x5f, 0xfb, 0x8c, 0xff, 0xed, 0x2f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x3f, 0xff, 0xa7, 0xff, 0xff, 0xf7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x1f, 0xff, 0x26, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0x7f, 0xfc, 0x71, 0xff, 0xff, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0xd8, 0xff, 0x73, 0xff, 0xff, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0xe1, 0xff, 0xc0, 0xff, 0xff, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0xf4, 0xff, 0xf0, 0xff, 0xf2, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0xf3, 0xff, 0xf8, 0xff, 0xea, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xfe, 0xff, 0xff, 0xfc, 0xff, 0xf8, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x7f, 0xff, 0xfe, 0xbf, 0xf3, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x7f, 0xff, 0xfe, 0x7f, 0xff, 0xd7, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x7b, 0x7f, 0xff, 0xef, 0xff, 0x6f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x39, 0xff, 0xff, 0x1f, 0xff, 0xaf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xb9, 0xff, 0xfe, 0x7f, 0xef, 0x0f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0x8f, 0xff, 0xff, 0xff, 0x87, 0x5f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xc7, 0xff, 0xff, 0xff, 0xcf, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xc7, 0xf3, 0xff, 0xff, 0xc6, 0xbf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xe3, 0xd7, 0xff, 0xff, 0xdc, 0x3f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xe1, 0xc5, 0xff, 0xff, 0xfc, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf1, 0xc7, 0xff, 0xff, 0xf8, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xf8, 0x7f, 0xfb, 0xe7, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfc, 0x1f, 0xc9, 0xe3, 0xe9, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xfe, 0x1f, 0xf9, 0xff, 0xc3, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x47, 0xe7, 0xff, 0xcf, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0x81, 0xff, 0xff, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xe0, 0x0f, 0xf4, 0x7f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xf8, 0x00, 0x49, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xfe, 0x00, 0x1f, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xf0, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 
	0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff, 0xff
};
void DrawStopWatch() {
  display.clearDisplay();    
  display.drawBitmap(0, 0, stopwatch, 128, 64, WHITE);
  display.display();      
}


void setupWiFi() {
  display.clearDisplay();
  display.setTextSize(1);
  display.setTextColor(SSD1306_WHITE);
  
  WiFi.mode(WIFI_STA);  // Set as station, not access point
  
  while (WiFi.status() != WL_CONNECTED) {    
    display.clearDisplay();
    display.setCursor(0,0);
    display.setTextSize(2);
    display.println("Connecting");
    display.display();
    
    IPAddress staticIP(192, 168, 4, 99);   // Choose a fixed IP
    IPAddress gateway(192, 168, 4, 1);      // Pi's IP
    IPAddress subnet(255, 255, 255, 0);     // Standard subnet mask

    WiFi.config(staticIP, gateway, subnet);

    WiFi.begin(ssid, password);
    
    // Wait up to 10 seconds for connection
    int attempts = 0;
    while (WiFi.status() != WL_CONNECTED && attempts < 20) {
      delay(500);
      Serial.print(".");
      attempts++;
    }
    
    if (WiFi.status() == WL_CONNECTED) {
      setLEDColors(0, 0, 25);
      
      display.clearDisplay();      
      //display.setCursor(0,0);
      //display.setTextSize(2);
      //display.println("  RC  Lap    Timer");
      //display.setTextSize(1);
      //display.println("");
      //display.println("Connected with IP:");      
      //display.println(WiFi.localIP().toString());      
      display.drawBitmap(0, 0, rc10, 128, 64, WHITE);
      display.display();      
      
      Serial.println("\nConnected to WiFi");
      Serial.println("IP: " + WiFi.localIP().toString());
    } else {
      setLEDColors(50, 0, 0);
      display.clearDisplay();
      display.setCursor(0,0);
      display.setTextSize(2);
      display.println("Connection failed");
      display.setTextSize(1);
      display.println("Retrying in 5s...");
      display.display();
      Serial.println("\nConnection failed, retrying in 5 seconds...");
      delay(5000);
    }
  }
}
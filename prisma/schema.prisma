generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")  
}

model Driver {
  id       String    @id @default(uuid())
  name     String    @unique
  cars     Car[]
  sessions Session[]
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model Car {
  id        String    @id @default(uuid())
  name      String
  driver    Driver    @relation(fields: [driverId], references: [id])
  driverId  String
  sessions  Session[]
  createdAt DateTime  @default(now())
  updatedAt DateTime  @updatedAt

  @@unique([driverId, name])
}

model Session {
  id            String   @id
  date          DateTime
  driver        Driver   @relation(fields: [driverId], references: [id])
  driverId      String
  car           Car      @relation(fields: [carId], references: [id])
  carId         String
  driverName    String
  carName       String
  totalTime     Int
  totalLaps     Int
  notes         String?  @db.Text  // Add this line
  laps          Lap[]
  penalties     Penalty[]
  createdAt     DateTime @default(now())
  updatedAt     DateTime @updatedAt

  @@index([driverId])
  @@index([carId])
}

model Lap {
  id        String   @id @default(uuid())
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  lapNumber Int
  lapTime   Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@index([sessionId])
}

model Penalty {
  id        String   @id @default(uuid())
  session   Session  @relation(fields: [sessionId], references: [id])
  sessionId String
  lapNumber Int
  count     Int
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt
}

model MotionSettings {
  id          String    @id @default(uuid())
  name        String    @unique
  sensitivity Int
  threshold   Float
  cooldown    Int
  createdAt   DateTime  @default(now())
  updatedAt   DateTime  @updatedAt
}